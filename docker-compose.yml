version: '3.8'

services:
  elasticsearch:
    image: elasticsearch:8.8.0
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
    networks:
      - microservices-network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: sis-database
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 123
    ports:
      - "5432:5432"
    networks:
      - microservices-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-network

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - microservices-network

  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - microservices-network

  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    networks:
      - microservices-network

  discovery-server:
    image: thephenom24/discovery-server:latest
    container_name: discovery-server
    pull_policy: always
    ports:
      - "8761:8761"
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  notification-service:
    image: thephenom24/notification-service:latest
    container_name: notification-service
    pull_policy: always
    ports:
      - "8082:8082"
    networks:
      - microservices-network
    depends_on:
      - discovery-server
      - broker
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  sis-service:
    image: thephenom24/sis-service:latest
    container_name: sis-service
    pull_policy: always
    ports:
      - "8080:8080"
    networks:
      - microservices-network
    depends_on:
      - discovery-server
      - broker
      - elasticsearch
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  enrollment-service:
    image: thephenom24/enrollment-service:latest
    container_name: enrollment-service
    pull_policy: always
    ports:
      - "8081:8081"
    networks:
      - microservices-network
    depends_on:
      - discovery-server
      - broker
      - elasticsearch
    environment:
      - SPRING_PROFILES_ACTIVE=docker

networks:
  microservices-network:
    driver: bridge
